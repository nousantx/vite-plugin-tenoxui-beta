{"version":3,"file":"index.cjs.js","sources":["../src/plugin/utils/classNameExtractor.js","../src/plugin/index.js"],"sourcesContent":["// new - classNameExtractor.js\nimport Ngurai from 'nguraijs'\nimport { TenoxUI, constructRaw } from 'tenoxui'\n\nexport class Extractor {\n  constructor({ css = { property: { bg: 'background' } }, rules = [] } = {}) {\n    this.config = rules\n    this.cssConfig = css\n    this.core = new TenoxUI(this.cssConfig)\n  }\n\n  setConfig({ css = {}, rules = [] } = {}) {\n    this.config = rules\n    this.cssConfig = css\n    this.core = new TenoxUI(css)\n    return this\n  }\n\n  process(code) {\n    try {\n      const { all, prefix, type } = this.core.main.regexp(\n        Object.keys(this.cssConfig.aliases || {}) || []\n      )\n\n      const nx = new Ngurai({\n        customOnly: true,\n        noUnknownToken: true,\n        noSpace: true,\n        custom: {\n          className: [\n            new RegExp(`!?${all.slice(1, -1)}`),\n            new RegExp(`!?(?:(${prefix}):)?${type}`),\n            ...this.config.map((reg) => {\n              const source = reg.source\n              return new RegExp(`!?${source}`, reg.flags)\n            })\n          ]\n        }\n      })\n\n      const classNames = [\n        ...new Set(\n          nx\n            .process(code)\n            .flatMap((line) => line.filter((token) => token.type === 'className'))\n            .map((token) => token.value)\n        )\n      ]\n\n      return classNames.length > 0\n        ? this.core\n            .process(classNames)\n            .map(\n              (i) =>\n                (i.isImportant ? '!' : '') +\n                (i.rules ? constructRaw(i.raw[0], i.raw[1], '', '') : i.raw[6])\n            )\n        : []\n    } catch (error) {\n      console.error('Error extracting class names:', error)\n      return []\n    }\n  }\n}\n","import fs from 'node:fs'\nimport fg from 'fast-glob'\nimport path from 'node:path'\nimport { pathToFileURL } from 'node:url'\nimport { createFilter } from '@rollup/pluginutils'\nimport { Extractor } from './utils/classNameExtractor.js'\nimport { TenoxUI } from 'tenoxui'\n\nconst WS_EVENT_PREFIX = 'hmr:tenoxui'\nconst VIRTUAL_MODULE_ID = 'virtual:tenoxui:dev'\nconst RESOLVED_VIRTUAL_MODULE_ID = '\\0' + VIRTUAL_MODULE_ID\nconst VIRTUAL_MODULE_ID_BUILD = 'virtual:tenoxui.css'\nconst RESOLVED_VIRTUAL_MODULE_ID_BUILD = '\\0' + VIRTUAL_MODULE_ID_BUILD\n\nexport default function Txoo() {\n  let config\n  let includeFilter = () => true\n  let tenoxui = null\n  let extractor = new Extractor()\n  const configPath = path.resolve('tenoxui.config.js')\n\n  async function loadConfig() {\n    try {\n      if (fs.existsSync(configPath)) {\n        const configURL = pathToFileURL(configPath).href + `?t=${Date.now()}`\n        const data = await import(configURL)\n        config = data.default || data\n        tenoxui = new TenoxUI(config.css)\n        extractor.setConfig({ css: config.css })\n        const { include, exclude } = config\n        includeFilter = createFilter(include, exclude)\n      } else {\n        console.warn('⚠️ Config file not found, using empty config')\n        config = {}\n        includeFilter = () => true\n      }\n    } catch (error) {\n      console.error('❌ Error loading framework config:', error)\n      config = {}\n    }\n  }\n\n  let MODES\n  let css = ''\n  let servers = []\n\n  const allClassNames = new Set()\n\n  function generateCSS() {\n    if (!tenoxui) return ''\n    const styles = tenoxui.render(config.css?.apply || {}, Array.from(allClassNames))\n    return styles\n  }\n\n  async function scanAllFiles() {\n    allClassNames.clear()\n    const files = await fg(config.include || [], {\n      ignore: config.exclude || []\n    })\n\n    for (const file of files) {\n      const content = fs.readFileSync(file, 'utf-8')\n      const classNames = extractor.process(content)\n      for (const name of classNames) {\n        allClassNames.add(name)\n      }\n    }\n  }\n\n  function sendCSSUpdate(newCSS) {\n    for (const server of servers) {\n      server.ws.send({\n        type: 'custom',\n        event: WS_EVENT_PREFIX,\n        data: newCSS\n      })\n    }\n  }\n\n  return [\n    {\n      name: 'tenoxui:global',\n      configResolved(_config) {\n        MODES = _config.command\n      },\n      async buildStart() {\n        await loadConfig()\n        await scanAllFiles()\n        css = generateCSS()\n      }\n    },\n    {\n      name: 'tenoxui:dev',\n      resolveId(id) {\n        if (id === VIRTUAL_MODULE_ID) return RESOLVED_VIRTUAL_MODULE_ID\n      },\n      load(id) {\n        if (id === RESOLVED_VIRTUAL_MODULE_ID) {\n          if (MODES === 'serve') {\n            return `import { updateStyle, removeStyle } from '/@vite/client'\n\nconst id = ${JSON.stringify(VIRTUAL_MODULE_ID)};\nlet currentCSS = '';\n\n// Fetch current CSS from server\nasync function getCurrentCSS() {\n  try {\n    const response = await fetch('/__tenoxui_css__');\n    return await response.text();\n  } catch (e) {\n    console.warn('[tenoxui] Failed to fetch CSS:', e);\n    return '';\n  }\n}\n\n// Initialize styles\ngetCurrentCSS().then(css => {\n  currentCSS = css;\n  updateStyle(id, css);\n});\n\nif (import.meta.hot) {\n  import.meta.hot.on('${WS_EVENT_PREFIX}', (newCSS) => {\n    currentCSS = newCSS;\n    updateStyle(id, newCSS);\n  });\n  \n  import.meta.hot.accept(() => {\n    // Accept updates\n  });\n  \n  import.meta.hot.prune(() => {\n    removeStyle(id);\n  });\n}\n\nexport default {};\n`\n          }\n          return ''\n        }\n      },\n      async configureServer(server) {\n        servers.push(server)\n        server.watcher.add(configPath)\n        server.middlewares.use('/__tenoxui_css__', async (req, res, next) => {\n          if (req.method === 'GET') {\n            await loadConfig()\n            await scanAllFiles()\n            res.setHeader('Content-Type', 'text/plain')\n            res.setHeader('Cache-Control', 'no-cache')\n            res.end(generateCSS())\n          } else {\n            next()\n          }\n        })\n\n        server.watcher.on('change', (file) => {\n          if (file === configPath) {\n            console.warn('TenoxUI config file changed, reloading...')\n            server.ws.send({ type: 'full-reload' })\n          }\n          if (includeFilter(file)) {\n            const content = fs.readFileSync(file, 'utf-8')\n            const classNames = extractor.process(content)\n            for (const name of classNames) {\n              allClassNames.add(name)\n            }\n            css = generateCSS()\n            sendCSSUpdate(css)\n          }\n        })\n      }\n    },\n    {\n      name: 'tenoxui:build',\n      resolveId(id) {\n        if (id === VIRTUAL_MODULE_ID_BUILD) return RESOLVED_VIRTUAL_MODULE_ID_BUILD\n      },\n      load(id) {\n        if (id === RESOLVED_VIRTUAL_MODULE_ID_BUILD) {\n          if (MODES === 'build') {\n            return css\n          }\n          return '/* nothing to do :3 */'\n        }\n      }\n    }\n  ]\n}\n"],"names":["Extractor","css","rules","TenoxUI","code","all","prefix","type","nx","Ngurai","reg","source","classNames","line","token","i","constructRaw","error","WS_EVENT_PREFIX","VIRTUAL_MODULE_ID","RESOLVED_VIRTUAL_MODULE_ID","VIRTUAL_MODULE_ID_BUILD","RESOLVED_VIRTUAL_MODULE_ID_BUILD","Txoo","config","includeFilter","tenoxui","extractor","configPath","path","loadConfig","fs","data","pathToFileURL","include","exclude","createFilter","MODES","servers","allClassNames","generateCSS","_a","scanAllFiles","files","fg","file","content","name","sendCSSUpdate","newCSS","server","_config","id","req","res","next"],"mappings":"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"}